/* Copyright 2015 lleaff
This file is part of ASCII life.

ASCII life is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ASCII life is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ASCII life.  If not, see <http://www.gnu.org/licenses/>.
 */function shuffleArray(t){for(var r=0,o=t.length,e=[];o>r;++r)if(-1===e.indexOf(r)){var i=Math.random()*o>>0;e.push(i);var n=t[r];t[r]=t[i],t[i]=n}}function randomInt(t,r){var o=r-t;return Math.round(Math.random()*o+t)>>0}function randomArrayElement(t){return randomInt(0,t.length-1)}function Vector(t,r){this.x=+t,this.y=+r}function Grid(t,r){this.width=t,this.height=r,this.arr=new Array(r);for(var o=0;o<this.arr.length;++o)this.arr[o]=new Array(t)}function World(t,r){var o="object"==typeof t?t:Grid.parse(t);r=World.charMapFromElemMap(r),this.grid=World.charGridToElemGrid(o,r,this),World.initializeActors(this),this.legend=r,this.actions=new World.Actions(this)}function Ai(t){this.actor=t,this.world=this.actor.world}Vector.prototype.plus=function(t){return new Vector(this.x+t.x,this.y+t.y)},Vector.prototype.minus=function(t){return new Vector(this.x-t.x,this.y-t.y)},Vector.prototype.times=function(t){return new Vector(this.x*t.x,this.y*t.y)},Vector.prototype.add=function(t){this.x+=t.x,this.y+=t.y},Vector.prototype.substract=function(t){this.x-=t.x,this.y-=t.y},Vector.prototype.multiply=function(t){this.x*=t.x,this.y*=t.y},Vector.prototype.toString=function(){return"{"+this.x+", "+this.y+"}"},Object.defineProperty(Vector.prototype,"length",{get:function(){return Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2))}}),Vector.prototype.equal=function(t){return this.x===t.x&&this.y===t.y},Vector.prototype.greater=function(t){return this.length>t.length},Vector.prototype.less=function(t){return this.length<t.length},Grid.prototype.draw=function(){return this.arr.map(function(t){return t.join("")},"").join("\n")},Grid.prototype.toString=Grid.prototype.draw,Grid.prototype.forAll=function(t,r){void 0===r&&(r=this);for(var o,e=0;e<r.arr.length;++e)for(o=0;o<r.arr[e].length;++o)t(r.arr[e][o],o,e,r.arr)},Grid.prototype.forEach=function(t,r){void 0===r&&(r=this);for(var o,e=0;e<r.arr.length;++e)for(o=0;o<r.arr[e].length;++o)void 0!==r.arr[e][o]&&null!==r.arr[e][o]&&t(r.arr[e][o],o,e,r.arr)},Grid.prototype.map=function(t){var r=new Grid(this.width,this.height);return this.forAll(function(o,e,i,n){r.arr[i][e]=t(o,e,i,n)}),r},Grid.prototype.fill=function(t){this.forAll(function(r,o,e,i){i[e][o]=t})},Grid.prototype.get=function(t){return this.arr[t.y]?this.arr[t.y][t.x]:void 0},Grid.prototype.getAt=function(t,r){return this.arr[r][t]},Grid.prototype.set=function(t,r){this.arr[t.y][t.x]=r},Grid.prototype.setAt=function(t,r,o){this.arr[r][t]=o},Grid.prototype.isOutside=function(t){var r=!1,o=!1;return this.width>=t.x&&0<=t.x&&(r=!0),this.height>=t.y&&0<=t.y&&(o=!0),r&&o?!1:new Vector(r?0:t.x-this.width,o?0:t.y-this.height)},Grid.parse=function(t){for(var r,o=0,e=0;e<t.length;++e)"\n"===t[e]&&(void 0===r&&(r=e),++o);"\n"!==t[t.length-1]&&++o;var i=new Grid(r,o),n=0;for(e=0;e<t.length;++e)"\n"===t[e]?++n:i.set(new Vector((e-n)%r,(e-n)/r>>0),t[e]);return i},World.charToElements=function(t,r){var o=r[t].map(function(t){var r=Object.create(t);return r.prototype=t,r});return o},World.charGridToElemGrid=function(t,r,o){return t.map(function(t){return World.charToElements(t,r)})},World.elementToChar=function(t){return t.ch},World.elemGridToCharGrid=function(t){return t.map(function(t){return t.reduce(function(t,r){return r.solid?r:t},t[0]).ch})},World.prototype.draw=function(){return World.elemGridToCharGrid(this.grid).toString()},World.prototype.toString=World.prototype.draw,World.charMapFromElemMap=function(t){var r={};for(var o in t){var e=t[o];e.ch&&(r[e.ch]=[t[o]],e.speed&&r[e.ch].push(t["default"]))}return r},World.initializeActors=function(t){t.grid.forEach(function(r){r.forEach(function(r,o,e){r.act&&(r.world=t,r.ai=new Ai(r))})})},World.prototype.addElement=function(t,r){this.grid.get(t).push(r)},World.prototype.removeElement=function(t,r){var o=this.grid.get(t);o.splice(o.indexOf(r),1)},World.prototype.moveElement=function(t,r,o){this.addElement(r,o),this.removeElement(t,o)},World.direction=new function(){this.n=new Vector(0,1),this.up=this.n,this.ne=new Vector(1,1),this.e=new Vector(1,0),this.right=this.e,this.se=new Vector(1,-1),this.s=new Vector(0,-1),this.bottom=this.s,this.sw=new Vector(-1,-1),this.w=new Vector(-1,0),this.left=this.w,this.nw=new Vector(-1,1)},World.directions=["n","ne","e","se","s","sw","w","nw"],World.directions.vectors=[new Vector(0,1),new Vector(1,1),new Vector(1,0),new Vector(1,-1),new Vector(0,-1),new Vector(-1,-1),new Vector(-1,0),new Vector(-1,1)],World.direction.vectorToDirectionName=function(t){for(var r=0;r<World.directions.vectors.length;++r)if(World.directions.vectors[r].equal(t))return World.directions[r]},World.direction.vectorToDirection=function(t){return new Vector(t.x?1:0,t.y?1:0)},World.direction.vectorToDistance=function(t){return t.x},World.direction.random=function(){for(var t,r;!t&&!r;)t=randomInt(-1,1),r=randomInt(-1,1);return new Vector(t,r)},World.direction.forEach=function(t,r){var o=this;World.directions.forEach(function(r){t(o[r],r,o)},r)},World.direction.forEachFrom=function(t,r,o){function e(){return n+=n<World.directions.length?1:0}function i(){return c-=c>0?1:World.directions.length}for(var n,c,s=World.directions.indexOf(World.direction.vectorToDirectionName(initialDireciton)),d=s;n!==s&&c!==s;)r.call(o,directions.vectors[d],directions[d],this),d=d===n?e():i()},World.direction.some=function(t,r){var o=this;return World.directions.some(function(e){return t.call(r,o[e],e,o)},r)},World.View=function(t,r,o){this.world=t,this.actor=r,this.position=o},World.View.prototype.New=function(t){return new World.View(this.world,this.actor,this.position.plus(t))},World.View.prototype.isTrapped=function(){return!World.direction.some(function(t){var r=this.world.grid.get(this.position.plus(t));return r&&!r.some(function(t){return t.solid})||!1},this)},World.View.prototype.isOn=function(t){return World.Elements.hasType(this.world.grid.get(this.position),t)},World.View.prototype.reachable=function(t,r){var o=[];return World.direction.forEach(function(e){o.concat(this.look(e,r||this.actor.speed).reachable(t))},this),o},World.View.prototype.visible=function(t){var r,o=[];return World.direction.forEach(function(e){o.concat(r.look(e).visible(t))}),o},World.View.prototype.look=function(t,r){var o,e=[];void 0===r?(r=this.actor.sight,o=!1):o=!0;for(var i=this.position,n=0;r>n&&(elements=this.world.grid.get(i.plus(t)),e.push(elements),elements&&(o||!elements.some(function(t){return t.blockSight})));++n);return new World.View.Image(e,t)},World.View.Image=function(t,r){this.image=t,this.direction=r},World.View.Image.prototype.isSolid=function(t){function r(t){return t.some(function(t){return!!t.solid})}if(void 0===t){for(var o=0;o<this.image.length;++o)if(r(this.image[o]))return!0}else if(r(this.image[t]))return!0;return!1},Object.defineProperty(World.View.Image.prototype,"_addDirection",{enumerable:!1,writable:!1,value:function(t,r){t.push(this.direction.plus(new Vector(r,r)))}}),World.View.Image.prototype.reachable=function(t){for(var r=[],o=0;o<this.image.length;++o)if(World.Elements.hasType(this.image[o],t))this._addDirection(r,o);else if(this.isSolid(o))break;return r},World.View.Image.prototype.visible=function(t){for(var r=[],o=0;o<this.image.length;++o)World.Elements.hasType(this.image[o],t)&&this._addDirection(r,o);return r},World.View.Image.prototype.possibleMoves=function(){for(var t=[],r=0;r<this.image.length&&(void 0!==this.image[r]&&!this.isSolid(r));++r)this._addDirection(t,r);return t},World.View.closest=function(t){return t.reduce(function(t,r){return t&&t.x+t.y<r.x+r.y?t:r})},World.View.farthest=function(t){return t.reduce(function(t,r){return t&&t.x+t.y>r.x+r.y?t:r})},World.prototype.turn=function(){var t=[];this.grid.forEach(function(r,o,e,i){r.forEach(function(r){r.act&&t.push({elem:r,position:new Vector(o,e)})})}),shuffleArray(t),t.forEach(function(t){t.elem.view=new World.View(this,t.elem,t.position),t.elem.act()},this)},World.Actions=function(t){return{move:function(r,o,e){void 0===e&&(Math.abs(o.x)>1?(e=Math.abs(o.x),o=World.direction.vectorToDirection(o)):Math.abs(o.y)>1?(e=Math.abs(o.y),o=World.direction.vectorToDirection(o)):e=r.speed);for(var i=new Vector(0,0),n=r.view.look(o,e),c=0;e>c&&(n.image&&!n.isSolid(c));++c)i.add(o);return 0===i.x&&0===i.y?!1:(t.moveElement(r.view.position,r.view.position.plus(i),r),r.dir=c?o:null,c?i:null)}}},void 0===World.Element&&(World.Element={}),void 0===World.Elements&&(World.Elements={}),World.Element.hasType=function(t,r){return-1!==t.type.indexOf(r)},World.Elements.hasType=function(t,r){return t.filter(function(t){return World.Element.hasType(t,r)}).length},Ai.prototype.keepMoving=function(){if(this.actor.dir){var t=this.actor.view.look(this.actor.dir).possibleMoves().pop();if(t)return this.world.actions.move(this.actor,t)}return null},Ai.prototype.moveToward=function(t,r){var o=this.actor.view.reachable(t);shuffleArray(o);var e=World.View.closest(o);return e?this.world.actions.move(this.actor,e):("undefined"===r&&(r=this.actor.view.reacheable(),World.direction.random()),null)},Ai.prototype.moveAlong=function(t,r){function o(r){var o=this.view.New(potentialDirection.plus(e)).reachable(t,i);e=World.View.closest(o)}r||(r=this.dir);for(var e,i=1;!direction&&i<=this.sight;++i){World.direction.forEachFrom(o)}};
//# sourceMappingURL=../sourcemaps/asciilife.js.map